local a=game:GetService('Players')local b=game:GetService("RunService")local c=game:GetService("Workspace")local d=a.LocalPlayer;local e=game:GetService("Lighting")local f=c.CurrentCamera;local g=game:GetService("UserInputService")local h=d:GetMouse()local function i(j,k,l)local m=Instance.new(j)for n,o in pairs(k)do m[n]=o end;if l~=nil then m.Parent=l end;return m end;local p={ChamsInline=false,ChamsInlineColor=Color3.fromRGB(170,170,170),ChamsOutline=false,ChamsOutlineColor=Color3.fromRGB(141,115,245)}local function q(r)if r.Character==nil then return end;local s={"Torso","UpperTorso","LowerTorso","Left Arm","LeftUpperArm","LeftLowerArm","LeftHand","Right Arm","RightUpperArm","RightLowerArm","RightHand","Left Leg","LeftUpperLeg","LeftLowerLeg","LeftFoot","Right Leg","RightUpperLeg","RightLowerLeg","RightFoot"}local t,u=p.ChamsInline,p.ChamsInlineColor;local v,w=p.ChamsOutline,p.ChamsOutlineColor;local function x(y,z)local A,B=y:FindFirstChild("Inline"),y:FindFirstChild("Outline")if not A then A=i(z,{Name="Inline",Color3=u,Transparency=0.75,ZIndex=2,AlwaysOnTop=true,AdornCullingMode="Never",Visible=t,Adornee=y})if z=="BoxHandleAdornment"then A.Size=y.Size+Vector3.new(0.05,0.05,0.05)else A.Radius=y.Size.X/3;A.Height=y.Size.Y+0.05;A.CFrame=CFrame.new(Vector3.new(),Vector3.new(0,1,0))end end;if not B then B=i(z,{Name="Outline",Color3=u,Transparency=0.55,Transparency=0.55,ZIndex=2,AlwaysOnTop=false,AdornCullingMode="Never",Visible=v,Adornee=y})if z=="BoxHandleAdornment"then B.Size=y.Size+Vector3.new(0.1,0.1,0.1)else B.Radius=y.Size.X/3;B.Height=y.Size.Y+0.1;B.CFrame=CFrame.new(Vector3.new(),Vector3.new(0,1,0))end end;A.Color3=u;B.Color3=w;if t then A.Visible=true else A.Visible=false end;if v then B.Visible=true else B.Visible=false end;A.Parent=y;B.Parent=y;return A,B end;for C,y in next,r.Character:GetChildren()do if y.Name=="Head"and not y:IsA("LocalScript")and not y:IsA("Accessory")then x(y,"CylinderHandleAdornment")elseif table.find(s,y.Name)and not y:IsA("LocalScript")and not y:IsA("Accessory")then x(y,"BoxHandleAdornment")end end;r.Character.ChildAdded:Connect(function(D)if D.Name=="Head"and not D:IsA("LocalScript")and not D:IsA("Accessory")then x(D,"CylinderHandleAdornment")elseif table.find(s,D.Name)and not D:IsA("LocalScript")and not D:IsA("Accessory")then x(D,"BoxHandleAdornment")end end)end;local function E()for C,r in next,game.Players:GetPlayers()do if r~=d then q(r)end end end;local F=d.Character or d.CharacterAdded:Wait()local G=F:WaitForChild("Head").Size;local H={}do for n,o in ipairs(getgc(true))do if typeof(o)=="table"then if rawget(o,"lol")then H["RaycastCheck1"]=rawget(o,"lol")elseif rawget(o,"ONRH_S4")then H["RaycastCheck2"]=rawget(o,"ONRH_S4")end end end;for n,o in pairs(getconstants(H["RaycastCheck1"]))do if o==1.75 or o==10 then setconstant(H["RaycastCheck1"],n,20)end end;for n,o in pairs(getconstants(H["RaycastCheck2"]))do if o==1.5 or o==10 then setconstant(H["RaycastCheck2"],n,20)end end end;local I;I=hookmetamethod(game,"__index",function(self,J)if tostring(self)=="Head"and J=="Size"then return G end;return I(self,J)end)local K=loadstring(game:HttpGet("https://raw.githubusercontent.com/Eternal1ty/MainScripts/main/UI"))()local L=loadstring(game:HttpGet("https://raw.githubusercontent.com/Eternal1ty/MainScripts/main/Esp.lua"))()K:init()L:init()local M=K.NewWindow({title="etrx.al"..' || '..K.gamename,size=UDim2.new(0,525,0,650)})local N=M:AddTab('Legit')local O=M:AddTab('Visuals')local P=M:AddTab('Miscellaneous')local Q=K:CreateSettingsTab(M)local R=N:AddSection('Combat')local S=O:AddSection('Player ESP')local T=O:AddSection('Player ESP Settings')local U=O:AddSection('Player ESP Positioning',2)local V=O:AddSection('Lighting',2)local W=O:AddSection('Camera',2)R:AddToggle({text="Hitbox Extender",state=false,flag="HitboxExtender"})R:AddSlider({text="Extend Size",flag="HitboxExtenderSize",min=1,max=6,value=1})R:AddToggle({text="No Fail Lockpick",state=false,flag="Lockpick"})S:AddToggle({text="Enabled",state=false,flag="ESP_Enabled",callback=function(o)L.enabled=o end})S:AddToggle({text="Name",state=false,flag="ESP_Name",callback=function(o)L.textlayout.Name.Enabled=o end}):AddColor({text="Name Color",tooltip="Changes The Name Color",flag="ESP_NameClr",callback=function(o)L.textlayout.Name.Color=o end})S:AddToggle({text="Bounding Box",state=false,flag="ESP_Box",callback=function(o)L.box[1]=o end}):AddColor({text="Bounding Box Color",tooltip="Changes The Bounding Box Color",flag="ESP_BoxClr",callback=function(o)L.box[2]=o end})S:AddList({text="Bounding Box Type",flag="ESP_BoxType",tooltip="Changes The Bounding Box Type",values={"Default","Corner"},selected="Default",callback=function(o)if o=="Default"then L.custombox="default"elseif o=="Corner"then L.custombox="corner"end end})S:AddToggle({text="Bounding Box Fill",state=false,flag="ESP_BoxFill",callback=function(o)L.boxfill[1]=o end}):AddColor({text="Bounding Box Fill Color",tooltip="Changes The Bounding Box Fill Color",flag="ESP_BoxFillClr",callback=function(o)L.boxfill[2]=o end})S:AddSlider({text="Box Fill Transparency",flag="ESP_BoxFillTrans",tooltip="Changes The Bounding Box Transparency",increment=0.01,min=0,max=1,value=0.5,callback=function(o)L.boxfill[3]=o end})S:AddToggle({text="Healthbar",state=false,flag="ESP_Healthbar",callback=function(o)L.barlayout.Health.Enabled=o end}):AddColor({text="Healthbar Color",tooltip="Changes The Healthbar Color",flag="ESP_HealthbarClr",callback=function(o)L.barlayout.Health.Color2=o end})S:AddToggle({text="Health Number",state=false,flag="ESP_HealthNumber",callback=function(o)L.textlayout.Health.Enabled=o end}):AddColor({text="Health Number Color",tooltip="Changes The Health Number Color",flag="ESP_HealthNumberClr",callback=function(o)L.textlayout.Health.Color=o end})S:AddToggle({text="Distance",state=false,flag="ESP_Distance",callback=function(o)L.textlayout.Distance.Enabled=o end}):AddColor({text="Distance Color",tooltip="Changes The Distance Color",flag="ESP_DistanceClr",callback=function(o)L.textlayout.Distance.Color=o end})S:AddToggle({text="Tracer",state=false,flag="ESP_Tracer",callback=function(o)L.tracer[1]=o end}):AddColor({text="Tracer Color",tooltip="Changes The Tracer Color",flag="ESP_TracerClr",callback=function(o)L.tracer[2]=o end})S:AddToggle({text="View Angle",state=false,flag="ESP_ViewAngle",callback=function(o)L.angle[1]=o end}):AddColor({text="View Angle Color",tooltip="Changes The View Angle Color",flag="ESP_ViewAngleClr",callback=function(o)L.angle[2]=o end})S:AddToggle({text="Arrow",state=false,flag="ESP_Arrow",callback=function(o)L.arrow[1]=o end}):AddColor({text="Arrow Color",tooltip="Changes The Arrow Color",flag="ESP_ArrowClr",callback=function(o)L.arrow[2]=o end})S:AddSlider({text="Arrow Radius",flag="ESP_ArrowR",tooltip="Changes The Arrow Radius",suffix="px",min=50,max=1000,value=300,callback=function(o)L.arrowradius=o end})T:AddToggle({text="Use Display Name",state=false,flag="ESP_DisplayName",callback=function(o)L.displayname=o end})T:AddToggle({text="Outline",state=true,flag="ESP_Outline",callback=function(o)L.outline[1]=o end})T:AddToggle({text="Limit Draw Distance",state=false,flag="ESP_LimitDraw",callback=function(o)L.limitdistance=o end})T:AddSlider({text="Draw Distance Limit",flag="ESP_LimitDrawDist",tooltip="Changes The Draw Distance Limit",suffix=" m",min=50,max=7500,value=1000,callback=function(o)L.maxdistance=o end})S:AddToggle({text="Chams Inline",state=false,flag="ChamsInline",callback=function(o)p.ChamsInline=o end}):AddColor({text="Chams Inline Color",tooltip="Changes The Chams Inline Color",flag="ChamsInlineColor",color=Color3.fromRGB(170,170,170),callback=function(X)p.ChamsInlineColor=X end})S:AddToggle({text="Chams Outline",state=false,flag="ChamsOutline",callback=function(o)p.ChamsOutline=o end}):AddColor({text="Chams Outline Color",tooltip="Changes The Chams Outline Color",flag="ChamsOutlineColor",color=Color3.fromRGB(141,115,245),callback=function(X)p.ChamsOutlineColor=X end})U:AddList({text="Healthbar Position",flag="ESP_HealthbarPos",tooltip="Changes The Healthbar Position",values={"Top","Right","Left","Bottom"},selected="Left",callback=function(o)if o=="Top"then L.barlayout.Health.Position="top"elseif o=="Right"then L.barlayout.Health.Position="right"elseif o=="Left"then L.barlayout.Health.Position="left"elseif o=="Bottom"then L.barlayout.Health.Position="bottom"end end})U:AddList({text="Name Position",flag="ESP_NamePos",tooltip="Changes The Name Position",values={"Top","Right","Left","Bottom"},selected="Top",callback=function(o)if o=="Top"then L.textlayout.Name.Position="top"elseif o=="Right"then L.textlayout.Name.Position="right"elseif o=="Left"then L.textlayout.Name.Position="left"elseif o=="Bottom"then L.textlayout.Name.Position="bottom"end end})U:AddList({text="Distance Position",flag="ESP_DistancePos",tooltip="Changes The Distance Position",values={"Top","Right","Left","Bottom"},selected="Bottom",callback=function(o)if o=="Top"then L.textlayout.Distance.Position="top"elseif o=="Right"then L.textlayout.Distance.Position="right"elseif o=="Left"then L.textlayout.Distance.Position="left"elseif o=="Bottom"then L.textlayout.Distance.Position="bottom"end end})U:AddList({text="Health Number Position",flag="ESP_HealthNumberPos",tooltip="Changes The Health Number Position",values={"Top","Right","Left","Bottom"},selected="Left",callback=function(o)if o=="Top"then L.textlayout.Health.Position="top"elseif o=="Right"then L.textlayout.Health.Position="right"elseif o=="Left"then L.textlayout.Health.Position="left"elseif o=="Bottom"then L.textlayout.Health.Position="bottom"end end})V:AddToggle({text="Force Time",state=false,flag="ForceTime"})V:AddSlider({text="Forced Time",flag="ForcedTime",tooltip="Changes The Time",suffix=" hr.",min=1,max=24,value=12})local Y=V:AddToggle({text="Custom Ambience",state=false,flag="Ambience"})Y:AddColor({text="Outdoor Ambience Color",tooltip="Changes The Outdoor Color",flag="OutdoorAmbience"})Y:AddColor({text="Indoor Ambience Color",tooltip="Changes The Indoor Ambience Color",flag="IndoorAmbience"})V:AddToggle({text="Global Shadows",state=true,flag="GlobalShadows"})V:AddList({text="Lighting Type",flag="LightingType",tooltip="Changes The Lighting Type",values={"Future","Voxel","ShadowMap","Compatibility"},selected="Future",callback=function(o)print(o)end})W:AddToggle({text="Custom Max Zoom Distance",state=false,flag="CustomMaxZoom"})W:AddSlider({text="Max Zoom Distance",flag="MaxZoom",tooltip="Changes The Camera Max Zoom",min=1,max=1000,value=20})K.utility:Connection(b.Heartbeat,function()if K.flags.HitboxExtender then for n,o in pairs(a:GetPlayers())do if o~=d and o.Character and o.Character:FindFirstChild("Head")then o.Character.Head.Size=Vector3.new(1,1,1)*K.flags.HitboxExtenderSize;o.Character.Head.Transparency=0.5;o.Character.Head.CanCollide=false end end else for n,o in pairs(a:GetPlayers())do if o~=d and o.Character and o.Character:FindFirstChild("Head")then o.Character.Head.Size=G;o.Character.Head.Transparency=0;o.Character.Head.CanCollide=true end end end end)game.Players.LocalPlayer.PlayerGui.ChildAdded:Connect(function(Z)if K.flags.Lockpick then if Z.Name=="LockpickGUI"then Z.MF["LP_Frame"].Frames.B1.Bar.UIScale.Scale=10;Z.MF["LP_Frame"].Frames.B2.Bar.UIScale.Scale=10;Z.MF["LP_Frame"].Frames.B3.Bar.UIScale.Scale=10 end else if Z.Name=="LockpickGUI"then Z.MF["LP_Frame"].Frames.B1.Bar.UIScale.Scale=1;Z.MF["LP_Frame"].Frames.B2.Bar.UIScale.Scale=1;Z.MF["LP_Frame"].Frames.B3.Bar.UIScale.Scale=1 end end end)sethiddenproperty(e,"Technology",Enum.Technology.Compatibility)e.GlobalShadows=false
